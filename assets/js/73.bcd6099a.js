(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{445:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("专栏原创出处："),s("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/framework/flink-basis",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源笔记文件 "),s("OutboundLink")],1),t._v(" ，"),s("a",{attrs:{href:"https://github.com/GourdErwa/flink-advanced",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源码 "),s("OutboundLink")],1),t._v("，欢迎 Star，转载请附上原文出处链接和本声明。\n本节内容对应"),s("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/datastream_api.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档 "),s("OutboundLink")],1)])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_1-简单示例程序"}},[t._v("1 简单示例程序")])]),s("li",[s("a",{attrs:{href:"#_2-data-sources-数据源"}},[t._v("2 Data Sources（数据源）")]),s("ul",[s("li",[s("a",{attrs:{href:"#基于文件"}},[t._v("基于文件")])]),s("li",[s("a",{attrs:{href:"#基于套接字"}},[t._v("基于套接字")])]),s("li",[s("a",{attrs:{href:"#基于集合"}},[t._v("基于集合")])]),s("li",[s("a",{attrs:{href:"#自定义"}},[t._v("自定义")])])])]),s("li",[s("a",{attrs:{href:"#_3-data-sinks-输出端"}},[t._v("3 Data Sinks（输出端）")])]),s("li",[s("a",{attrs:{href:"#_4-operators-算子"}},[t._v("4 Operators（算子）")]),s("ul",[s("li",[s("a",{attrs:{href:"#transformation-转换操作"}},[t._v("Transformation（转换操作）")])]),s("li",[s("a",{attrs:{href:"#physical-partitioning-物理分区"}},[t._v("Physical partitioning（物理分区）")])]),s("li",[s("a",{attrs:{href:"#算子链和任务槽"}},[t._v("算子链和任务槽")])])])]),s("li",[s("a",{attrs:{href:"#_5-容错能力"}},[t._v("5 容错能力")])]),s("li",[s("a",{attrs:{href:"#_6-延迟控制"}},[t._v("6 延迟控制")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"_1-简单示例程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简单示例程序"}},[t._v("#")]),t._v(" 1 简单示例程序")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/GourdErwa/flink-advanced/blob/master/src/main/scala/io/gourd/flink/scala/games/streaming/StreamingSimple.scala",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例源码 "),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" StreamingSimple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" StreamExecutionEnvironmentApp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" rolePayDataStream"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RolePay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GameData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rolePay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  rolePayDataStream\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getDataUnix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过滤")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("platform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataUnix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换为元组")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按 platform 字段分组")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeWindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5s 窗口统计")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 聚合 money 字段")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("print"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n  sEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 持续性输出部分示例：\n  3> (IOS_YY,1571497479,4170.0)\n  4> (ADR,1571576109,2640.0)\n  1> (IOS,1571575689,5230.0)\n  1> (H5,1571576559,2084.0)\n    ...\n    ...\n   */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-data-sources-数据源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-data-sources-数据源"}},[t._v("#")]),t._v(" 2 Data Sources（数据源）")]),t._v(" "),s("h3",{attrs:{id:"基于文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于文件"}},[t._v("#")]),t._v(" 基于文件")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("createInput(inputFormat)")]),t._v("-自定义文件基础类")]),t._v(" "),s("li",[s("code",[t._v("readTextFile(path)// TextInputFormat")]),t._v("-逐行读取文件，并将它们作为字符串返回。")]),t._v(" "),s("li",[s("code",[t._v("readFile(fileInputFormat, path)")]),t._v("-根据指定的文件输入格式读取（一次）文件。")]),t._v(" "),s("li",[s("code",[t._v("readFile(fileInputFormat, path, watchType, interval, pathFilter)-")]),t._v("-监控文件并读取数据")]),t._v(" "),s("li",[s("code",[t._v("readFileOfPrimitives(path, delimiter)")]),t._v("// PrimitiveInputFormat-解析以换行符（或其他 char 序列）定界的原始数据类型的文件，例如 String 或 Integer 使用给定的定界符。")]),t._v(" "),s("li",[s("code",[t._v("readSequenceFile(Key, Value, path)")]),t._v("// SequenceFileInputFormat-创建 JobConf 并从指定的路径中读取类型为 SequenceFileInputFormat，Key 类和 Value 类的文件，并将它们作为 Tuple2 <Key，Value> 返回。")])]),t._v(" "),s("h3",{attrs:{id:"基于套接字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于套接字"}},[t._v("#")]),t._v(" 基于套接字")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("socketTextStream")]),t._v("-从 socket 读取。数据可以由分隔符分割。")])]),t._v(" "),s("h3",{attrs:{id:"基于集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于集合"}},[t._v("#")]),t._v(" 基于集合")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("fromCollection(Seq)")]),t._v("-从 Java Java.util.Collection 创建数据流。集合中的所有数据必须具有相同的类型。不能并行执行（并行度=1）")]),t._v(" "),s("li",[s("code",[t._v("fromCollection(Iterator)")]),t._v("-从迭代器创建数据流。该类指定迭代器返回的数据的数据类型。不能并行执行（并行度=1）")]),t._v(" "),s("li",[s("code",[t._v("fromElements(elements: _*)")]),t._v("-从给定的对象序列创建数据流。所有对象必须具有相同的类型。不能并行执行（并行度=1）")]),t._v(" "),s("li",[s("code",[t._v("fromParallelCollection(SplittableIterator)")]),t._v("-从迭代器并行创建数据流。该类指定迭代器返回的数据的数据类型。")]),t._v(" "),s("li",[s("code",[t._v("generateSequence(from, to)")]),t._v(" -并行生成给定间隔中的数字序列。")])]),t._v(" "),s("h3",{attrs:{id:"自定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义"}},[t._v("#")]),t._v(" 自定义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("addSource")]),t._v("-自定义"),s("code",[t._v("SourceFunction")]),t._v("数据源读取。")])]),t._v(" "),s("h2",{attrs:{id:"_3-data-sinks-输出端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-data-sinks-输出端"}},[t._v("#")]),t._v(" 3 Data Sinks（输出端）")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("writeAsText()/ TextOutputFormat")]),t._v("-将数据按行写为字符串。通过调用每个数据的 toString 方法获得字符串。")]),t._v(" "),s("li",[s("code",[t._v("writeAsCsv(...)/ CsvOutputFormat")]),t._v("-将元组写为逗号分隔的值文件。行和字段定界符是可配置的。每个字段的值来自对象的 toString 方法。")]),t._v(" "),s("li",[s("code",[t._v("print()/ printToErr()")]),t._v(" - 在标准输出/标准错误流上打印每个数据的 toString（）值。可以提供前缀字符串区分不同的打印调用。如果并行度大于 1，则输出之前还将带有产生输出的任务的标识符。")]),t._v(" "),s("li",[s("code",[t._v("writeUsingOutputFormat()/ FileOutputFormat")]),t._v("-自定义文件输出的方法和基础类。支持自定义对象到字节的转换。")]),t._v(" "),s("li",[s("code",[t._v("writeToSocket")]),t._v(" -根据以下内容将数据写入套接字 SerializationSchema")]),t._v(" "),s("li",[s("code",[t._v("addSink")]),t._v("-调用自定义接收器功能。Flink 捆绑有连接到其他系统（例如 Apache Kafka）的连接器，这些连接器实现为接收器功能。")])]),t._v(" "),s("blockquote",[s("p",[t._v("请注意，上的 write*() 方法 DataStream 主要用于调试目的。它们不参与 Flink 的检查点，这意味着这些功能通常具有至少一次的语义。刷新到目标系统的数据取决于 OutputFormat 的实现。这意味着并非所有发送到 OutputFormat 的数据都立即显示在目标系统中。同样，在失败的情况下，这些记录可能会丢失。")])]),t._v(" "),s("p",[s("strong",[t._v("说明")]),t._v("\n为了将流可靠，准确地一次传输到文件系统中，请使用"),s("code",[t._v("flink-connector-filesystem")]),t._v("。")]),t._v(" "),s("p",[t._v("Flink 还提供接收器以收集 DataStream 结果以进行测试和调试。可以如下使用：")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("streaming"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("experimental"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("DataStreamUtils\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("JavaConverters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asScalaIteratorConverter\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" myResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" myOutput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataStreamUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("javaStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asScala\n")])])]),s("h2",{attrs:{id:"_4-operators-算子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-operators-算子"}},[t._v("#")]),t._v(" 4 Operators（算子）")]),t._v(" "),s("h3",{attrs:{id:"transformation-转换操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transformation-转换操作"}},[t._v("#")]),t._v(" Transformation（转换操作）")]),t._v(" "),s("h4",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> DataStream")]),s("br"),t._v("\n一个元素转换为一个新的元素")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"flatmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flatmap"}},[t._v("#")]),t._v(" FlatMap")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> DataStream")]),s("br"),t._v("\n一个元素转换为零个，一个或多个新的元素")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flatMap "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" Filter")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> DataStream")])]),t._v(" "),s("p",[t._v("为每个元素执行 boolean 函数判断，仅返回为 true 的元素")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"keyby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keyby"}},[t._v("#")]),t._v(" KeyBy")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> KeyedStream")])]),t._v(" "),s("p",[t._v("在逻辑上将流划分为不相交的分区，每个分区都包含同一键的元素。在内部是通过哈希分区实现的")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someKey"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Key by field "someKey"')]),t._v("\ndataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Key by the first element of a Tuple")]),t._v("\n")])])]),s("h4",{attrs:{id:"reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduce"}},[t._v("#")]),t._v(" Reduce")]),t._v(" "),s("p",[s("strong",[t._v("KeyedStream -> DataStream")])]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("KeyedStream")]),t._v("进行"),s("code",[t._v("reduce")]),t._v("函数操作")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("keyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"fold"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fold"}},[t._v("#")]),t._v(" Fold")]),t._v(" "),s("p",[s("strong",[t._v("KeyedStream -> DataStream")])]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("KeyedStream")]),t._v("进行"),s("code",[t._v("fold")]),t._v("函数操作")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    keyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fold"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"aggregations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aggregations"}},[t._v("#")]),t._v(" Aggregations")]),t._v(" "),s("p",[s("strong",[t._v("KeyedStream -> DataStream")])]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("KeyedStream")]),t._v("进行"),s("code",[t._v("Aggregations")]),t._v("函数操作，支持求最大、最小、和运算")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("keyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkeyedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" Window")]),t._v(" "),s("p",[s("strong",[t._v("KeyedStream -> WindowedStream")])]),t._v(" "),s("p",[t._v("在已经分区的"),s("code",[t._v("KeyedStream")]),t._v("上定义 Windows。 Windows 根据某些特征将每个键中的数据分组（例如，最近 5 秒钟内到达的数据）")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last 5 seconds of data")]),t._v("\ndataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TumblingEventTimeWindows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("h4",{attrs:{id:"windowall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windowall"}},[t._v("#")]),t._v(" WindowAll")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> AllWindowedStream")])]),t._v(" "),s("p",[t._v("Windows 可以在常规 DataStreams 上定义。 Windows 会根据某些特征（例如，最近 5 秒钟内到达的数据）对所有流事件进行分组")]),t._v(" "),s("blockquote",[s("p",[t._v("警告：在许多情况下，这是非并行转换。所有记录将被收集在 windowAll 运算符的一项任务中。")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last 5 seconds of data")]),t._v("\ndataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("windowAll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TumblingEventTimeWindows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("h4",{attrs:{id:"window-apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-apply"}},[t._v("#")]),t._v(" Window Apply")]),t._v(" "),s("p",[s("strong",[t._v("WindowedStream -> DataStream")])]),t._v(" "),s("p",[s("strong",[t._v("AllWindowedStream -> DataStream")])]),t._v(" "),s("p",[t._v("将一般功能应用于整个窗口。以下是一个手动汇总窗口元素的函数。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：如果使用 windowAll 转换，则需要使用 AllWindowFunction。")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("windowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" WindowFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// applying an AllWindowFunction on non-keyed window stream")]),t._v("\nallWindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AllWindowFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"window-reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-reduce"}},[t._v("#")]),t._v(" Window Reduce")]),t._v(" "),s("p",[s("strong",[t._v("WindowedStream -> DataStream")]),t._v("\t\n将 reduce 函数应用于窗口，并返回减小的值。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("windowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"window-fold"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-fold"}},[t._v("#")]),t._v(" Window Fold")]),t._v(" "),s("p",[s("strong",[t._v("WindowedStream -> DataStream")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("WindowedStream")]),t._v("上应用"),s("code",[t._v("fold")]),t._v("函数")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    windowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fold"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"aggregations-on-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aggregations-on-windows"}},[t._v("#")]),t._v(" Aggregations on windows")]),t._v(" "),s("p",[s("strong",[t._v("WindowedStream -> DataStream")])]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("WindowedStream")]),t._v("进行"),s("code",[t._v("Aggregations")]),t._v("函数操作，支持求最大、最小、和运算")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("windowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindowedStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"union"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[t._v("#")]),t._v(" Union")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("DataStream*")]),t._v(" -> DataStream")])]),t._v(" "),s("p",[t._v("两个或多个"),s("code",[t._v("DataStream")]),t._v("的并集，创建一个包含所有流中所有元素的新流。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：如果将"),s("code",[t._v("DataStream")]),t._v("与其自身合并，则在结果流中每个元素将获得两次。")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("union"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherStream1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" otherStream2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"window-join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-join"}},[t._v("#")]),t._v(" Window Join")]),t._v(" "),s("p",[s("strong",[t._v("DataStream,DataStream -> DataStream")])]),t._v(" "),s("p",[t._v("在给定键和一个公共窗口上连接两个数据流。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key selector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalTo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key selector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TumblingEventTimeWindows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"window-cogroup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-cogroup"}},[t._v("#")]),t._v(" Window CoGroup")]),t._v(" "),s("p",[s("strong",[t._v("DataStream,DataStream -> DataStream")])]),t._v(" "),s("p",[t._v("在给定键和公共窗口上将两个数据流组合在一起。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalTo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TumblingEventTimeWindows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"connect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connect"}},[t._v("#")]),t._v(" Connect")]),t._v(" "),s("p",[s("strong",[t._v("DataStream,DataStream -> ConnectedStreams")])]),t._v(" "),s("p",[t._v("“连接”两个保留其类型的数据流，从而允许两个流之间共享状态。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("someStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\notherStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" connectedStreams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"comap-coflatmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comap-coflatmap"}},[t._v("#")]),t._v(" CoMap, CoFlatMap")]),t._v(" "),s("p",[s("strong",[t._v("ConnectedStreams -> DataStream")])]),t._v(" "),s("p",[t._v("与"),s("code",[t._v("DataStream")]),t._v("的 map 和 flatMap 相似，使用类型匹配匹配流进行计算")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("connectedStreams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconnectedStreams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flatMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" Split")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> SplitStream")])]),t._v(" "),s("p",[t._v("根据某些"),s("em",[t._v("标准")]),t._v("将流分成两个或多个流。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" split "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someDataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"even"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"odd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" Select")]),t._v(" "),s("p",[s("strong",[t._v("SplitStream -> DataStream")])]),t._v(" "),s("p",[t._v("从拆分流中选择一个或多个流。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" even "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" split select "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"even"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" odd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" split select "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"odd"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" all "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("select"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"even"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"odd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"iterate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterate"}},[t._v("#")]),t._v(" Iterate")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> IterativeStream -> DataStream")])]),t._v(" "),s("p",[t._v("DataStream 迭代计算")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("initialStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  iteration "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" iterationBody "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iteration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*do something*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterationBody"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iterationBody"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"extract-timestamps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extract-timestamps"}},[t._v("#")]),t._v(" Extract Timestamps")]),t._v(" "),s("p",[s("strong",[t._v("DataStream -> DataStream")])]),t._v(" "),s("p",[t._v("从记录中提取时间戳，以便与使用事件时间语义的窗口一起使用。请参"),s("code",[t._v("5.1-Flink DataStream 时间机制 (Time&Watermark)")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assignTimestamps "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" timestampExtractor "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"extensions-api-扩展-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extensions-api-扩展-api"}},[t._v("#")]),t._v(" extensions API（扩展 API）")]),t._v(" "),s("p",[t._v("利用类型匹配计算，支持 API 参考 "),s("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/scala_api_extensions.html#datastream-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("scala_api_extensions"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("streaming"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extensions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("_\n\ndata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mapWith "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"physical-partitioning-物理分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#physical-partitioning-物理分区"}},[t._v("#")]),t._v(" Physical partitioning（物理分区）")]),t._v(" "),s("h4",{attrs:{id:"custom-partitioning-自定义分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#custom-partitioning-自定义分区"}},[t._v("#")]),t._v(" Custom partitioning（自定义分区）")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("dataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partitionCustom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("partitioner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someKey"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partitionCustom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("partitioner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"random-partitioning-随机分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#random-partitioning-随机分区"}},[t._v("#")]),t._v(" Random partitioning（随机分区）")]),t._v(" "),s("p",[s("code",[t._v("dataStream.shuffle()")])]),t._v(" "),s("h4",{attrs:{id:"rebalancing-重新负载分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebalancing-重新负载分区"}},[t._v("#")]),t._v(" Rebalancing（重新负载分区）")]),t._v(" "),s("p",[t._v("内容使用"),s("code",[t._v("round robin")]),t._v("方法将数据均匀打散。存在数据偏斜的情况下对性能优化有用。\n"),s("code",[t._v("dataStream.rebalance()")])]),t._v(" "),s("h4",{attrs:{id:"rescaling-重新缩放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rescaling-重新缩放"}},[t._v("#")]),t._v(" Rescaling（重新缩放）")]),t._v(" "),s("p",[t._v("通过执行 oepration 算子来实现的。由于这种方式仅发生在一个单一的节点，因此没有跨网络的数据传输。")]),t._v(" "),s("p",[t._v("如果上游操作有 2 个并发，而下游操作有 4 个并发，那么上游的一个并发结果分配给下游的两个并发操作，另外的一个并发结果分配给了下游的另外两个并发操作。"),s("br"),t._v("\n另一方面，下游有两个并发操作而上游又 4 个并发操作，那么上游的其中两个操作的结果分配给下游的一个并发操作而另外两个并发操作的结果则分配给另外一个并发操作。")]),t._v(" "),s("blockquote",[s("p",[t._v("Rebalancing 会产生全量重分区，而 Rescaling 不会。")])]),t._v(" "),s("p",[s("code",[t._v("dataStream.rescale()")])]),t._v(" "),s("h4",{attrs:{id:"broadcasting-广播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#broadcasting-广播"}},[t._v("#")]),t._v(" Broadcasting（广播）")]),t._v(" "),s("p",[t._v("广播用于将 dataStream 所有数据发到每一个 partition。\n"),s("code",[t._v("inputStream.broadcast()")])]),t._v(" "),s("h3",{attrs:{id:"算子链和任务槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算子链和任务槽"}},[t._v("#")]),t._v(" 算子链和任务槽")]),t._v(" "),s("ul",[s("li",[t._v("Flink 出于分布式执行的目的，将 operator 的 subtask 链接在一起形成 task（类似 spark 中的管道）。")]),t._v(" "),s("li",[t._v("每个 task 在一个线程中执行。")]),t._v(" "),s("li",[t._v("将 operators 链接成 task 是非常有效的优化：它可以减少线程与线程间的切换和数据缓冲的开销，并在降低延迟的同时提高整体吞吐量。")])]),t._v(" "),s("blockquote",[s("p",[t._v("参考***《运行环境》***内容")])]),t._v(" "),s("h4",{attrs:{id:"开始新算子链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始新算子链"}},[t._v("#")]),t._v(" 开始新算子链")]),t._v(" "),s("p",[s("code",[t._v("someStream.filter(...).map(...).startNewChain().map(...)")])]),t._v(" "),s("h4",{attrs:{id:"禁用算子链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#禁用算子链"}},[t._v("#")]),t._v(" 禁用算子链")]),t._v(" "),s("p",[s("code",[t._v("someStream.map(...).disableChaining()")])]),t._v(" "),s("h4",{attrs:{id:"显示指定任务槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示指定任务槽"}},[t._v("#")]),t._v(" 显示指定任务槽")]),t._v(" "),s("p",[s("code",[t._v('someStream.filter(...).slotSharingGroup("name")')])]),t._v(" "),s("h2",{attrs:{id:"_5-容错能力"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-容错能力"}},[t._v("#")]),t._v(" 5 容错能力")]),t._v(" "),s("blockquote",[s("p",[t._v("参考"),s("a",{attrs:{href:"https://github.com/GourdErwa/flink-advanced/blob/master/flink-notes/7.0-Flink%E7%8A%B6%E6%80%81%E4%B8%8E%E5%AE%B9%E9%94%99.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.0-Flink 状态与容错 "),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"_6-延迟控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-延迟控制"}},[t._v("#")]),t._v(" 6 延迟控制")]),t._v(" "),s("p",[t._v("默认情况下，数据不会在网络上一对一传输（这会导致不必要的网络通信），但是会进行缓冲。")]),t._v(" "),s("p",[t._v("缓冲区的大小（实际上是在计算机之间传输的）可以在 Flink 配置文件中设置。"),s("br"),t._v("\n尽管此方法可以优化吞吐量，但是当传入流不够快时，它可能会导致延迟问题。"),s("br"),t._v("\n为了控制吞吐量和延迟，可以"),s("code",[t._v("env.setBufferTimeout(timeoutMillis)")]),t._v("在执行环境（或各个运算符）上使用来设置缓冲区填充的最大等待时间。"),s("br"),t._v("\n在此时间之后，即使缓冲区未满，也会自动发送缓冲区。")]),t._v(" "),s("blockquote",[s("p",[t._v("此超时的默认值为 100 毫秒。")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LocalStreamEnvironment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" StreamExecutionEnvironment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createLocalEnvironment\nenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setBufferTimeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeoutMillis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("generateSequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setBufferTimeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeoutMillis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("为了"),s("strong",[t._v("最大化吞吐量")]),t._v("，请设置 set setBufferTimeout(-1) 来消除超时，并且仅在缓冲区已满时才刷新它们。")]),t._v(" "),s("li",[t._v("为了"),s("strong",[t._v("最小化延迟")]),t._v("，请将超时设置为接近 0 的值（例如 5 或 10 ms）。应避免将缓冲区超时设置为 0，因为它可能导致严重的性能下降。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);