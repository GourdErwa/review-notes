(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{546:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("专栏原创出处："),s("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/language/java-jvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源笔记文件 "),s("OutboundLink")],1),t._v(" ，"),s("a",{attrs:{href:"https://github.com/GourdErwa/java-advanced/tree/master/java-jvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源码 "),s("OutboundLink")],1),t._v("，欢迎 Star，转载请附上原文出处链接和本声明。")])]),t._v(" "),s("p",[t._v("Java JVM-虚拟机专栏系列笔记，系统性学习可访问个人复盘笔记-技术博客 "),s("a",{attrs:{href:"https://review-notes.top/language/java-jvm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java JVM-虚拟机 "),s("OutboundLink")],1)]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#一、前言"}},[t._v("一、前言")])]),s("li",[s("a",{attrs:{href:"#代码级别内存分配总结"}},[t._v("代码级别内存分配总结")])]),s("li",[s("a",{attrs:{href:"#逃逸分析"}},[t._v("逃逸分析")])]),s("li",[s("a",{attrs:{href:"#写一段简单的实战代码"}},[t._v("写一段简单的实战代码")]),s("ul",[s("li",[s("a",{attrs:{href:"#运行时常量池-constant-pool-分析"}},[t._v("运行时常量池（Constant pool）分析")])])])]),s("li",[s("a",{attrs:{href:"#参考"}},[t._v("参考")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"一、前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),s("p",[t._v("熟悉了虚拟机的「内存数据区域」后，大多数的理解力提留在概念层面，找一段代码细细分析分配过程突然会感觉力不从心。")]),t._v(" "),s("p",[t._v("公网上流出许多错误的概念，比如 "),s("s",[s("strong",[t._v("基础类型分配在栈上，对象分配在堆上")])]),t._v("！")]),t._v(" "),s("p",[t._v("这个错误的概念，虽然不足以影响我们编程，但是在虚拟机层面的深入学习会有一定误区。")]),t._v(" "),s("h2",{attrs:{id:"代码级别内存分配总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码级别内存分配总结"}},[t._v("#")]),t._v(" 代码级别内存分配总结")]),t._v(" "),s("p",[t._v("java 文件编译为 class 文件后，class 文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池表（Constant Pool Table），用于存放编译期生成的各种字面量与符号引用，这部分内容将在类加载后存放到方法区的运行时常量池中。")]),t._v(" "),s("p",[t._v("术语说明：\nMemory m = new Memory();")]),t._v(" "),s("ul",[s("li",[t._v("m 为「实例引用」")]),t._v(" "),s("li",[t._v("m 对应的对象数据为「实例数据」")])]),t._v(" "),s("p",[t._v("针对 JDK 8 细化：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("class 文件类的版本、字段、方法、接口等描述信息、常量池表->方法区（本地内存）")])]),t._v(" "),s("li",[s("p",[t._v("字符串常量池->方法区（堆）")])]),t._v(" "),s("li",[s("p",[t._v("类静态成员-基础数据（常量）->方法区")])]),t._v(" "),s("li",[s("p",[t._v("类静态成员-实例引用->方法区")])]),t._v(" "),s("li",[s("p",[t._v("类静态成员-实例数据->堆")])]),t._v(" "),s("li",[s("p",[t._v("类非静态成员-基础数据->堆")])]),t._v(" "),s("li",[s("p",[t._v("类非静态成员-实例引用->堆")])]),t._v(" "),s("li",[s("p",[t._v("类非静态成员-实例数据->堆")])]),t._v(" "),s("li",[s("p",[t._v("方法内部-基础数据->栈帧")])]),t._v(" "),s("li",[s("p",[t._v("方法内部-实例引用->栈帧")])]),t._v(" "),s("li",[s("p",[t._v("方法内部-实例数据->堆（逃逸分析，直接将实例数据分配在栈帧上）")])])]),t._v(" "),s("h2",{attrs:{id:"逃逸分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逃逸分析"}},[t._v("#")]),t._v(" 逃逸分析")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EscapeAnalysis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EscapeAnalysis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优化为：age 直接在栈上分配，return age + 8;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EscapeAnalysis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"写一段简单的实战代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写一段简单的实战代码"}},[t._v("#")]),t._v(" 写一段简单的实战代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 类静态成员变量 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" DEFAULT_A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2147483647")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" DEFAULT_B "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"static-variable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" DEFAULT_BYTE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),t._v(" MEMORY_ALLOCATION "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 类非静态成员变量 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 类静态成员方法 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultNoneInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" MEMORY_ALLOCATION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 类静态成员方法 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DEFAULT_A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DEFAULT_B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DEFAULT_BYTE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("声明术语：Java 中除了基础数据类型后，其余的都看做是对象类型（包括数组，String）")]),t._v(" "),s("p",[s("strong",[t._v("下面的这些数据分配在哪儿？")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类静态成员变量-基础数据类型（DEFAULT_A、DEFAULT_B）")])]),t._v(" "),s("li",[s("p",[t._v("类静态成员变量-对象数据类型（DEFAULT_BYTE、MEMORY_ALLOCATION）")])]),t._v(" "),s("li",[s("p",[t._v("类静态成员方法-（defaultNoneInstance、defaultInstance）")])]),t._v(" "),s("li",[s("p",[t._v("类非静态成员变量-基础数据类型（a、b）")])]),t._v(" "),s("li",[s("p",[t._v("类非静态成员变量-对象数据类型（byte）")])]),t._v(" "),s("li",[s("p",[t._v("类静态成员方法-（构造方法）")])])]),t._v(" "),s("p",[t._v("我们使用 "),s("code",[t._v("javap -c -v MemoryAllocation.class")]),t._v(" 反汇编成字节码，保留关键信息逐步分析")]),t._v(" "),s("h3",{attrs:{id:"运行时常量池-constant-pool-分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池-constant-pool-分析"}},[t._v("#")]),t._v(" 运行时常量池（Constant pool）分析")]),t._v(" "),s("p",[t._v("运行时常量池是方法区的一部分，也就是 JDK 8 后的元空间（本地内存）的一部分。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('public class MemoryAllocation\nConstant pool:\n   #1 = Methodref          #13.#39        // java/lang/Object."<init>":()V\n   #2 = Fieldref           #6.#40         // MemoryAllocation.a:I\n   #3 = Fieldref           #6.#41         // MemoryAllocation.b:Ljava/lang/String;\n   #4 = Fieldref           #6.#42         // MemoryAllocation.bytes:[B\n   #5 = Fieldref           #6.#43         // MemoryAllocation.MEMORY_ALLOCATION:LMemoryAllocation;\n   #6 = Class              #44            // MemoryAllocation\n   #7 = Integer            2147483647\n   #8 = String             #45            // static-variable\n   #9 = Fieldref           #6.#46         // MemoryAllocation.DEFAULT_BYTE:[B\n  #10 = Methodref          #6.#47         // MemoryAllocation."<init>":(ILjava/lang/String;[B)V\n  #11 = Integer            102400\n  #12 = Methodref          #6.#39         // MemoryAllocation."<init>":()V\n  #13 = Class              #48            // java/lang/Object\n  #14 = Utf8               DEFAULT_A\n  #15 = Utf8               I\n  #16 = Utf8               ConstantValue\n  #17 = Utf8               DEFAULT_B\n  #18 = Utf8               Ljava/lang/String;\n  #19 = Utf8               DEFAULT_BYTE\n  #20 = Utf8               [B\n  #21 = Utf8               MEMORY_ALLOCATION\n  #22 = Utf8               LMemoryAllocation;\n  #23 = Utf8               a\n  #24 = Utf8               b\n  #25 = Utf8               bytes\n  #26 = Utf8               <init>\n  #27 = Utf8               ()V\n  #28 = Utf8               Code\n  #29 = Utf8               LineNumberTable\n  #30 = Utf8               LocalVariableTable\n  #31 = Utf8               this\n  #32 = Utf8               (ILjava/lang/String;[B)V\n  #33 = Utf8               defaultNoneInstance\n  #34 = Utf8               ()LMemoryAllocation;\n  #35 = Utf8               defaultInstance\n  #36 = Utf8               <clinit>\n  #37 = Utf8               SourceFile\n  #38 = Utf8               MemoryAllocation.java\n  #39 = NameAndType        #26:#27        // "<init>":()V\n  #40 = NameAndType        #23:#15        // a:I\n  #41 = NameAndType        #24:#18        // b:Ljava/lang/String;\n  #42 = NameAndType        #25:#20        // bytes:[B\n  #43 = NameAndType        #21:#22        // MEMORY_ALLOCATION:LMemoryAllocation;\n  #44 = Utf8               MemoryAllocation\n  #45 = Utf8               static-variable\n  #46 = NameAndType        #19:#20        // DEFAULT_BYTE:[B\n  #47 = NameAndType        #26:#32        // "<init>":(ILjava/lang/String;[B)V\n  #48 = Utf8               java/lang/Object\n')])])]),s("p",[t._v("静态成员变量分析：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("#7 = Integer 2147483647")]),t._v(" 为 DEFAULT_A 的常量")]),t._v(" "),s("li",[s("code",[t._v("#8 = String #45 // static-variable")]),t._v(" 为 DEFAULT_B 的常量")]),t._v(" "),s("li",[s("code",[t._v("#9 = Fieldref #6.#46 // MemoryAllocation.DEFAULT_BYTE:[B")]),t._v(" DEFAULT_BYTE 字段对应符号引用指向了类.变量名符号.类型符号")])]),t._v(" "),s("p",[t._v("非静态成员变量（也叫类实例变量）分析：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("#2 = Fieldref #6.#40 // MemoryAllocation.a:I")]),t._v(" 引用符号")]),t._v(" "),s("li",[s("code",[t._v("#3 = Fieldref #6.#41 // MemoryAllocation.b:Ljava/lang/String;")]),t._v(" 引用符号")]),t._v(" "),s("li",[s("code",[t._v("#4 = Fieldref #6.#42 // MemoryAllocation.bytes:[B")]),t._v(" 引用符号")])]),t._v(" "),s("p",[t._v("静态成员方法 defaultInstance 分析：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 类静态成员方法 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryAllocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DEFAULT_A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DEFAULT_B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DEFAULT_BYTE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      stack"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" locals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("           #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个对象, 并将其引用引用值压入栈顶")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" dup                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复制栈顶数值并将复制值压入栈顶")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ldc           #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 2147483647 常量值从常量池中推送至栈顶")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ldc           #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 static-variable 常量值从常量池中推送至栈顶")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" getstatic     #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Field DEFAULT_BYTE:[B 获取指定类的静态域 DEFAULT_BYTE , 并将其压入栈顶")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" invokespecial #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Method "<init>":(ILjava/lang/String;[B)V 构造方法')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" areturn     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回对象引用")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LineNumberTable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  public MemoryAllocation();\n    descriptor: ()V\n    flags: ACC_PUBLIC\n    Code:\n      stack=1, locals=1, args_size=1\n         0: aload_0\n         1: invokespecial #1    // Method java/lang/Object."<init>":()V\n         4: return\n      LineNumberTable:\n        line 23: 0\n        line 24: 4\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       5     0  this   LMemoryAllocation;\n\n  public MemoryAllocation(int, java.lang.String, byte[]);\n    descriptor: (ILjava/lang/String;[B)V\n    flags: ACC_PUBLIC\n    Code:\n      stack=2, locals=4, args_size=4\n         0: aload_0\n         1: invokespecial #1    // Method java/lang/Object."<init>":()V\n         4: aload_0\n         5: iload_1\n         6: putfield      #2    // Field a:I\n         9: aload_0\n        10: aload_2\n        11: putfield      #3    // Field b:Ljava/lang/String;\n        14: aload_0\n        15: aload_3\n        16: putfield      #4    // Field bytes:[B\n        19: return\n      LineNumberTable:\n        line 26: 0\n        line 27: 4\n        line 28: 9\n        line 29: 14\n        line 30: 19\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0      20     0  this   LMemoryAllocation;\n            0      20     1     a   I\n            0      20     2     b   Ljava/lang/String;\n            0      20     3 bytes   [B\n\n  public static MemoryAllocation defaultNoneInstance();\n    descriptor: ()LMemoryAllocation;\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=1, locals=0, args_size=0\n         0: getstatic     #5    // Field MEMORY_ALLOCATION:LMemoryAllocation;\n         3: areturn\n      LineNumberTable:\n        line 34: 0\n\n  public static MemoryAllocation defaultInstance();\n    descriptor: ()LMemoryAllocation;\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=5, locals=0, args_size=0\n         0: new           #6    // class MemoryAllocation\n         3: dup\n         4: ldc           #7    // int 2147483647\n         6: ldc           #8    // String static-variable\n         8: getstatic     #9    // Field DEFAULT_BYTE:[B\n        11: invokespecial #10   // Method "<init>":(ILjava/lang/String;[B)V\n        14: areturn\n      LineNumberTable:\n        line 39: 0\n\n  static {};\n    descriptor: ()V\n    flags: ACC_STATIC\n    Code:\n      stack=2, locals=0, args_size=0\n         0: ldc           #11   // int 102400\n         2: newarray       byte\n         4: putstatic     #9    // Field DEFAULT_BYTE:[B\n         7: new           #6    // class MemoryAllocation\n        10: dup\n        11: invokespecial #12   // Method "<init>":()V\n        14: putstatic     #5    // Field MEMORY_ALLOCATION:LMemoryAllocation;\n        17: return\n      LineNumberTable:\n        line 15: 0\n        line 16: 7\n}\nSourceFile: "MemoryAllocation.java"\n')])])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[t._v("字节码翻译字典-"),s("a",{attrs:{href:"https://blog.csdn.net/xiaohulunb/article/details/103976523",target:"_blank",rel:"noopener noreferrer"}},[t._v("字节码指令集 "),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);