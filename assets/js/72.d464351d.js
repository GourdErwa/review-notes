(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{444:function(t,a,s){"use strict";s.r(a);var e=s(10),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("专栏原创出处："),s("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/framework/flink-basis",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源笔记文件 "),s("OutboundLink")],1),t._v(" ，"),s("a",{attrs:{href:"https://github.com/GourdErwa/flink-advanced",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源码 "),s("OutboundLink")],1),t._v("，欢迎 Star，转载请附上原文出处链接和本声明。\n本节内容对应"),s("a",{attrs:{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/event_time.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档 "),s("OutboundLink")],1),t._v("，本节内容对应"),s("a",{attrs:{href:"https://github.com/GourdErwa/flink-advanced/blob/master/src/main/scala/io/gourd/flink/scala/games/streaming/Watermark.scala",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例源码 "),s("OutboundLink")],1)])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_1-time-时间"}},[t._v("1 Time（时间）")])]),s("li",[s("a",{attrs:{href:"#_2-watermark-水印-水位线"}},[t._v("2 Watermark（水印/水位线）")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-1-有序流中-watermarks"}},[t._v("2.1 有序流中 Watermarks")])]),s("li",[s("a",{attrs:{href:"#_2-2-乱序流中-watermarks"}},[t._v("2.2 乱序流中 Watermarks")])]),s("li",[s("a",{attrs:{href:"#_2-3-并行流中的-watermarks"}},[t._v("2.3 并行流中的 Watermarks")])])])]),s("li",[s("a",{attrs:{href:"#_3-指定-timestamp-与生成-watermarks"}},[t._v("3 指定 Timestamp 与生成 Watermarks")]),s("ul",[s("li",[s("a",{attrs:{href:"#_3-1-sourcefunction-直接定义"}},[t._v("3.1 SourceFunction 直接定义")])]),s("li",[s("a",{attrs:{href:"#_3-2-通过-flink-的-timestamp-assigner-指定"}},[t._v("3.2 通过 Flink 的 Timestamp Assigner 指定")])])])]),s("li",[s("a",{attrs:{href:"#_4-为每个-kafka-分区分配时间戳-水印"}},[t._v("4.为每个 Kafka 分区分配时间戳/水印")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"_1-time-时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-time-时间"}},[t._v("#")]),t._v(" 1 Time（时间）")]),t._v(" "),s("p",[t._v("所有由 Flink 事件-时间流应用生成的条目都必须伴随着一个时间戳。时间戳将一个条目与一个特定的时间点关联起来，一般这个时间点表示的是这条 record 发生的时间。不过 application 可以随意选择时间戳的含义，只要流中条目的时间戳是随着流的前进而递增即可。\n ")]),t._v(" "),s("p",[s("strong",[t._v("支持的时间模型：")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("EventTime")]),t._v(" 是事件创建的时间，即事件产生时自带时间戳，"),s("em",[t._v("在 Flink 处理计算中，事件时间难免有延迟，为了处理延迟，必须指定 "),s("code",[t._v("Watermark")]),t._v(" 的生成方式")])]),t._v(" "),s("li",[s("strong",[t._v("IngestionTime")]),t._v(" 是事件进入 Flink 的时间，即进入 "),s("strong",[t._v("source operator")]),t._v(" 时获取所在主机时间")]),t._v(" "),s("li",[s("strong",[t._v("ProcessingTime")]),t._v(" 是每一个算子操作的获取所在主机时间\n ")])]),t._v(" "),s("p",[s("strong",[t._v("时间模型比较")])]),t._v(" "),s("ul",[s("li",[t._v("性能： ProcessingTime> IngestTime> EventTime")]),t._v(" "),s("li",[t._v("延迟： ProcessingTime< IngestTime< EventTime")]),t._v(" "),s("li",[t._v("确定性： EventTime> IngestTime> ProcessingTime")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：Flink 从数据流模型中实现了许多技术。有关事件时间和水印的一个很好的介绍，请查看下")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-101",target:"_blank",rel:"noopener noreferrer"}},[t._v("流式处理概念:时间域、窗口化 "),s("OutboundLink")],1),t._v("， "),s("a",{attrs:{href:"http://09itblog.site/?p=270",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文译文 "),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-102",target:"_blank",rel:"noopener noreferrer"}},[t._v("流式处理概念:水印、触发器、积累模式 "),s("OutboundLink")],1),t._v("， "),s("a",{attrs:{href:"http://09itblog.site/?p=279",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文译文 "),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/43864.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("流式处理概念:会话窗口 "),s("OutboundLink")],1),t._v(",  "),s("a",{attrs:{href:"http://09itblog.site/?p=283",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文译文 "),s("OutboundLink")],1)])])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("如何设置时间域？")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" env "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" StreamExecutionEnvironment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getExecutionEnvironment\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认使用 TimeCharacteristic.ProcessTime")]),t._v("\nenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setStreamTimeCharacteristic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimeCharacteristic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProcessingTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选的:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-watermark-水印-水位线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-watermark-水印-水位线"}},[t._v("#")]),t._v(" 2 Watermark（水印/水位线）")]),t._v(" "),s("p",[t._v("实时系统中，由于各种原因造成的延时，造成某些消息发到 flink 的时间延时于事件产生的时间。"),s("br"),t._v("\n如果基于"),s("code",[t._v("event time")]),t._v("构建"),s("code",[t._v("window")]),t._v("，但是对于迟到的事件，我们又不能无限期的等下去，必须要有个机制来保证一个特定的时间后，必须触发"),s("code",[t._v("window")]),t._v("去进行计算了。这个特别的机制，就是 Watermark。")]),t._v(" "),s("p",[s("code",[t._v("Watermark")]),t._v(" 作为数据处理流中的一部分进行传输，并且携带一个时间戳 t。 一个 "),s("code",[t._v("Watermark(t)")]),t._v(" 表示流中应该不再有事件时间比 t 小的元素（某个事件的时间戳比 "),s("code",[t._v("Watermark")]),t._v(" 时间大）\n ")]),t._v(" "),s("p",[s("strong",[t._v("水印有两个基本属性：")])]),t._v(" "),s("ol",[s("li",[t._v("它们必须单调递增，以确保任务的 event-time 时钟向前推进，而不是向后")]),t._v(" "),s("li",[t._v("它们与记录的时间戳是相关的。一个时间戳为 T 的水印表示的是：在它之后接下来的所有记录的时间戳，都必须大于 T\n ")])]),t._v(" "),s("p",[t._v("Watermarks(水印) 处理机制如下：")]),t._v(" "),s("ol",[s("li",[t._v("参考 google 的 DataFlow。")]),t._v(" "),s("li",[t._v("是 event time 处理进度的标志。")]),t._v(" "),s("li",[t._v("表示比 watermark 更早 (更老) 的事件都已经到达 (没有比水位线更低的数据 )。")]),t._v(" "),s("li",[t._v("基于 watermark 来进行窗口触发计算的判断。")])]),t._v(" "),s("h3",{attrs:{id:"_2-1-有序流中-watermarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-有序流中-watermarks"}},[t._v("#")]),t._v(" 2.1 有序流中 Watermarks")]),t._v(" "),s("p",[t._v("某些情况下，基于 Event Time 的数据流是有续的 (相对 event time)。"),s("br"),t._v("\n在有序流中，watermark 就是一个简单的周期性标记。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-review-notes.oss-cn-beijing.aliyuncs.com/framework/flink-basis/_images/stream_watermark_in_order.png",alt:"stream_watermark_in_order"}})]),t._v(" "),s("h3",{attrs:{id:"_2-2-乱序流中-watermarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-乱序流中-watermarks"}},[t._v("#")]),t._v(" 2.2 乱序流中 Watermarks")]),t._v(" "),s("p",[t._v("在更多场景下，基于 Event Time 的数据流是无续的 (相对 event time)。")]),t._v(" "),s("p",[t._v("在无序流中，Watermarks 至关重要，他告诉 operator 比 Watermarks 更早 (更老/时间戳更小) 的事件已经到达，operator 可以将内部事件时间提前到 Watermarks 的时间戳 (可以触发 window 计算)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-review-notes.oss-cn-beijing.aliyuncs.com/framework/flink-basis/_images/stream_watermark_out_of_order.png",alt:"stream_watermark_out_of_order"}})]),t._v(" "),s("h3",{attrs:{id:"_2-3-并行流中的-watermarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-并行流中的-watermarks"}},[t._v("#")]),t._v(" 2.3 并行流中的 Watermarks")]),t._v(" "),s("p",[t._v("通常情况下， watermark 在源函数中或源函数后生成。如果指定多次 watermark，后面指定的 watermark 会覆盖前面的值。 源函数的每个 sub-task 独立生成水印。")]),t._v(" "),s("p",[t._v("随着水印在算子操作中的流动，它们会提前到达其到达的算子操作的事件时间。每当算子操作提前其事件时间时，同时算子操作会为下游生成一个新的 watermark。\n ")]),t._v(" "),s("p",[t._v("一些算子消耗多个输入流；例如，keyBy(…) or partition(…) function。这样的算子的当前事件时间是其输入流的事件时间中的最小值。随着其输入流更新其事件时间，算子也将更新。\n ")]),t._v(" "),s("p",[t._v("现在详细的解释一下，一个 task 如何释放一个水印，并在收到一个新的水印时如何更新它自身的 event-time 时钟（clock）。Flink 会将数据流分成不同的分区（partition），对于每个分区，都会有不同的 operator task 处理，这些 task 并行工作处理整个数据流。每个分区都是记录（包含时间戳）与水印的数据流。对于一个 operator，基于它与上游/下游 operators 连接的方式，它的 tasks 可以从一个或多个输入分区接受 records 和水印，并释放 records 和水印到一个或多个输出分区。下面我们会详细的介绍一个 task 如何释放水印到多个 output tasks，以及它如何根据（从输入 tasks）收到的水印，推进它自身的 event-time 时钟。")]),t._v(" "),s("p",[t._v("一个 task 对每个输入分区，都维护了一个分区水印。当 task 从一个分区收到一个水印，它会将对应分区的水印，更新为收到的水印最大值，并设置为当前值。然后，task 更新它的 event-time 时钟为所有分区水印中的最小值。如果 event-time 时钟相较之前有增加，则 task 处理所有被触发的计时器，并最终广播它的新事件-时间到所有下游 task，此操作通过释放一个对应的水印到所有连接的输出分区完成。\n ")]),t._v(" "),s("p",[t._v("对于有多个输入流的（例如 Union 或 CoFlatMap 操作）operators，它们的 tasks 也会计算它们自身的 event-time 时钟，并作为所有分区水印的最小值– 他们并不（从不同的输入流中）区分 partition watermarks。这样做的结果是，两个不同的输入流中的数据会根据同一 event-time 时钟进行处理。但是，如果一个 application 的各个输入流的事件时间并不是一致的，则这个行为会导致问题。\n ")]),t._v(" "),s("p",[t._v("Flink 的水印处理以及传播算法,确保了 operator task 恰当地释放一致时间戳的记录和水印。然而它依赖的基础是：所有分区持续提供递增的水印。一旦一个分区的水印不再递增，或者完全空闲（不再发送任何记录与水印），则 task 的事件-时间时钟不会再向前推进，并且 task 的计时器也不会被触发。在基于时间的、依赖于向前（advancing）时钟执行计算（并做清理）的 operators 中，便会造成问题。最终会导致处理延时、state 大小剧增（如果没有定期从所有的输入任务中接收到新的水印）。")]),t._v(" "),s("p",[t._v("若是两个输入流的水印差异太大，也会造成类似的影响。在有两个输入流的 task 中，它的事件-时钟会对应于较慢的流，并且较快的流的 records 或是中间结果一般会缓存到 state 中，直到 event-time 时钟允许处理它们。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-review-notes.oss-cn-beijing.aliyuncs.com/framework/flink-basis/_images/parallel_streams_watermarks.png",alt:"parallel_streams_watermarks"}})]),t._v(" "),s("h2",{attrs:{id:"_3-指定-timestamp-与生成-watermarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-指定-timestamp-与生成-watermarks"}},[t._v("#")]),t._v(" 3 指定 Timestamp 与生成 Watermarks")]),t._v(" "),s("h3",{attrs:{id:"_3-1-sourcefunction-直接定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-sourcefunction-直接定义"}},[t._v("#")]),t._v(" 3.1 SourceFunction 直接定义")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GameSourceFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GameModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Seq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" millis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isRunning "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n  override def "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SourceContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isRunning "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" seq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ctx.collect(seq(counter))")]),t._v("\n      val next "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("seq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("collectWithTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 毫秒时间戳")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      if (next.hasWatermarkTime) {")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        ctx.emitWatermark(new Watermark(next.getWatermarkTime))")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      }")]),t._v("\n      counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("millis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  override def "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    isRunning "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-2-通过-flink-的-timestamp-assigner-指定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-通过-flink-的-timestamp-assigner-指定"}},[t._v("#")]),t._v(" 3.2 通过 Flink 的 Timestamp Assigner 指定")]),t._v(" "),s("p",[t._v("Flink 提供了两个接口用于指定 Timestamp 与 Watermarks")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("AssignerWithPeriodicWatermarks")]),t._v("  按时间间隔周期性生成 Watermarks")]),t._v(" "),s("li",[s("code",[t._v("AssignerWithPunctuatedWatermarks")]),t._v(" 根据接入的事件触发条件生成 Watermarks")])]),t._v(" "),s("p",[t._v("生成类图关系如下：\n"),s("img",{attrs:{src:"https://blog-review-notes.oss-cn-beijing.aliyuncs.com/framework/flink-basis/_images/timestampAssigner_uml.png",alt:"timestampAssigner_uml"}})]),t._v(" "),s("p",[s("code",[t._v("DataStream")]),t._v("支持指定"),s("code",[t._v("Timestamp 与 Watermarks")]),t._v(" API")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" assignTimestamps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extractor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TimestampExtractor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已废弃 @Deprecated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" assignAscendingTimestamps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extractor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 底层转换为 AssignerWithPeriodicWatermarks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("assigner"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AssignerWithPeriodicWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("assigner"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AssignerWithPunctuatedWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("简单示例：")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("sEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setStreamTimeCharacteristic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimeCharacteristic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置时间域")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" GameAscendingTimestampExtractor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UserLogin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置水印生成器")]),t._v("\n")])])]),s("p",[t._v("####3.2.1 AssignerWithPeriodicWatermarks（周期性水印生成器）\n通过定义生成水印的间隔（每 n 毫秒） "),s("code",[t._v("ExecutionConfig.setAutoWatermarkInterval(...)")]),t._v("。"),s("br"),t._v("\n调用"),s("code",[t._v("AssignerWithPeriodicWatermarks")]),t._v("的"),s("code",[t._v("getCurrentWatermark()")]),t._v("方法，如果返回的水印非空且大于前一个水印，则覆盖以前的水印。")]),t._v(" "),s("p",[t._v("总结为：")]),t._v(" "),s("ul",[s("li",[t._v("基于 Timer")]),t._v(" "),s("li",[t._v("ExecutionConfig.setAutoWatermarkInterval(msec) (默认是 200ms, 设置 Watermarks 发送的周期)")]),t._v(" "),s("li",[t._v("实现 "),s("code",[t._v("AssignerWithPeriodicWatermarks")]),t._v(" 接口")])]),t._v(" "),s("h5",{attrs:{id:"_3-2-1-1-flink-api-提供-时间戳单调递增的分配器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-1-flink-api-提供-时间戳单调递增的分配器"}},[t._v("#")]),t._v(" 3.2.1.1 Flink-API 提供：时间戳单调递增的分配器")]),t._v(" "),s("p",[t._v("适用于 event-time 戳单调递增的场景，数据没有太多延时。")]),t._v(" "),s("blockquote",[s("p",[t._v("底层实现为 "),s("code",[t._v("AscendingTimestampExtractor<T> implements AssignerWithPeriodicWatermarks<T>")])])]),t._v(" "),s("p",[s("code",[t._v("val withTimestampsAndWatermarks = stream.assignAscendingTimestamps( _.getCreationTime )")])]),t._v(" "),s("h5",{attrs:{id:"_3-2-1-2-flink-api-提供-允许固定延迟的分配器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-2-flink-api-提供-允许固定延迟的分配器"}},[t._v("#")]),t._v(" 3.2.1.2 Flink-API 提供：允许固定延迟的分配器")]),t._v(" "),s("p",[t._v("适用于预先知道最大延迟的场景 (例如最多比之前的元素延迟 3000ms)。")]),t._v(" "),s("blockquote",[s("p",[t._v("底层实现为 "),s("code",[t._v("BoundedOutOfOrdernessTimestampExtractor<T> implements AssignerWithPeriodicWatermarks<T>")])])]),t._v(" "),s("h5",{attrs:{id:"_3-2-1-3-自定义实现-assignerwithperiodicwatermarks-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-3-自定义实现-assignerwithperiodicwatermarks-示例"}},[t._v("#")]),t._v(" 3.2.1.3 自定义实现 AssignerWithPeriodicWatermarks 示例")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置水印生成器")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" BoundedOutOfOrdernessGenerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UserLogin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" TimeLagWatermarkGenerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UserLogin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n周期性水印生成器 = 示例 1\n此生成器生成的水印支持处理给定延迟时间范围内的数据\n支持延迟的时间动态计算 = 当前处理事件中的最大时间 - 支持最大延迟时间\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" BoundedOutOfOrdernessGenerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" GameModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AssignerWithPeriodicWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" maxOutOfOrderness "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3500L")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持最大延迟时间 3.5 seconds")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" currentMaxTimestamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前最大时间")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" extractTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" previousElementTimestamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" timestamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventTimestamp\n    currentMaxTimestamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentMaxTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timestamp\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回水印为当前最大时间减去支持最大延迟时间")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" getCurrentWatermark"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Watermark "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Watermark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentMaxTimestamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" maxOutOfOrderness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n周期性水印生成器 = 示例 2\n此生成器生成的水印支持处理给定延迟时间范围内的数据。\n支持延迟的时间动态计算 = 当前系统时间 - 支持最大延迟时间\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" TimeLagWatermarkGenerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" GameModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AssignerWithPeriodicWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" maxTimeLag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000L")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持最大延迟时间 5 seconds")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" extractTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" previousElementTimestamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventTimestamp\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回水印为当前时间减去支持最大延迟时间")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" getCurrentWatermark"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Watermark "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Watermark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTimeMillis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" maxTimeLag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-2-assignerwithpunctuatedwatermarks-条件水印生成器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-assignerwithpunctuatedwatermarks-条件水印生成器"}},[t._v("#")]),t._v(" 3.2.2 AssignerWithPunctuatedWatermarks（条件水印生成器）")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("AssignerWithPunctuatedWatermarks")]),t._v("接口。"),s("br"),t._v("\n首先调用该 "),s("code",[t._v("extractTimestamp(...)")]),t._v("方法为元素分配时间戳，然后立即调用"),s("code",[t._v("checkAndGetNextWatermark(...)")]),t._v("方法。"),s("br"),t._v("\n如果返回的水印非空且大于前一个水印，则覆盖以前的水印。")]),t._v(" "),s("p",[t._v("总结为：")]),t._v(" "),s("ul",[s("li",[t._v("实现 "),s("code",[t._v("AssignerWithPunctuatedWatermarks")]),t._v(" 接口")]),t._v(" "),s("li",[t._v("生成水印逻辑自定义")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：可以在每个事件上生成水印。但是，由于每个水印都会在下游引起一些计算，因此过多的水印会降低性能。")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置水印生成器")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" PunctuatedAssigner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UserLogin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 带条件的水印生成器 = 示例\n在特定事件规则，可能会生成新的水印时生成水印\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" PunctuatedAssigner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" GameModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AssignerWithPunctuatedWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" extractTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" previousElementTimestamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventTimestamp\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" checkAndGetNextWatermark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastElement"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" extractedTimestamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Watermark "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hasWatermarkMarker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Watermark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extractedTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-为每个-kafka-分区分配时间戳-水印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-为每个-kafka-分区分配时间戳-水印"}},[t._v("#")]),t._v(" 4.为每个 Kafka 分区分配时间戳/水印")]),t._v(" "),s("p",[t._v("当 kafka 作为数据源时，kafka 的每个 Partition 分区里面时间戳可能是升序或者乱序模式。通常情况，我们会多个 Partition 分区并行处理，我们可以为 kafka 配置水印。\nkafka 内部为每个 Partition 分区维护一个水印，并且在流进行 shuffle 时以"),s("strong",[t._v("2.3 并行流中的 Watermarks")]),t._v("进行水印合并")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" kafkaSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" FlinkKafkaConsumer09"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MyType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myTopic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nkafkaSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assignTimestampsAndWatermarks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" AscendingTimestampExtractor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MyType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" extractAscendingTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MyType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventTimestamp\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DataStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MyType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafkaSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:"https://blog-review-notes.oss-cn-beijing.aliyuncs.com/framework/flink-basis/_images/parallel_kafka_watermarks.png",height:"100%"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);