(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{534:function(a,t,s){"use strict";s.r(t);var n=s(10),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("p",[a._v("专栏原创出处："),s("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/language/java-core",target:"_blank",rel:"noopener noreferrer"}},[a._v("github-源笔记文件 "),s("OutboundLink")],1),a._v(" ，"),s("a",{attrs:{href:"https://github.com/GourdErwa/java-advanced/tree/master/java-core",target:"_blank",rel:"noopener noreferrer"}},[a._v("github-源码 "),s("OutboundLink")],1),a._v("，欢迎 Star，转载请附上原文出处链接和本声明。")])]),a._v(" "),s("p",[a._v("Java 核心知识专栏系列笔记，系统性学习可访问个人复盘笔记-技术博客 "),s("a",{attrs:{href:"https://review-notes.top/language/java-core/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 核心知识 "),s("OutboundLink")],1)]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#一、内部类是什么"}},[a._v("一、内部类是什么")])]),s("li",[s("a",{attrs:{href:"#二、内部类种类"}},[a._v("二、内部类种类")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1-成员内部类"}},[a._v("1. 成员内部类")])]),s("li",[s("a",{attrs:{href:"#_2-静态内部类"}},[a._v("2. 静态内部类")])]),s("li",[s("a",{attrs:{href:"#_3-局部内部类"}},[a._v("3. 局部内部类")])]),s("li",[s("a",{attrs:{href:"#_4-匿名内部类"}},[a._v("4. 匿名内部类")])])])]),s("li",[s("a",{attrs:{href:"#三、应用场景"}},[a._v("三、应用场景")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"一、内部类是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、内部类是什么"}},[a._v("#")]),a._v(" 一、内部类是什么")]),a._v(" "),s("p",[a._v("把类定义在另一个类的内部，该类就被称为「内部类」。")]),a._v(" "),s("p",[a._v("内部类又根据定义的位置、类的修饰词不同分为：")]),a._v(" "),s("ul",[s("li",[a._v("成员内部类")]),a._v(" "),s("li",[a._v("静态内部类")]),a._v(" "),s("li",[a._v("局部内部类")]),a._v(" "),s("li",[a._v("匿名内部类")])]),a._v(" "),s("h2",{attrs:{id:"二、内部类种类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、内部类种类"}},[a._v("#")]),a._v(" 二、内部类种类")]),a._v(" "),s("p",[a._v("术语说明：")]),a._v(" "),s("ul",[s("li",[a._v("成员 = 变量 + 方法")]),a._v(" "),s("li",[a._v("静态成员 = 静态变量 + 静态方法")]),a._v(" "),s("li",[a._v("非静态成员 = 非静态变量 + 非静态方法")])]),a._v(" "),s("h3",{attrs:{id:"_1-成员内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-成员内部类"}},[a._v("#")]),a._v(" 1. 成员内部类")]),a._v(" "),s("p",[a._v("定义：位于外部类成员位置的类")]),a._v(" "),s("p",[a._v("大白话的理解：像定义类的非静态成员那样定义了一个类")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MemberOuter")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MemberInner")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" ages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MemberOuter")]),a._v(" memberOuter "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MemberOuter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MemberOuter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MemberInner")]),a._v(" oi "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" memberOuter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MemberInner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("特点：")]),a._v(" "),s("ul",[s("li",[a._v("可以访问外部类的「所有成员」，包括 private 修饰的")]),a._v(" "),s("li",[a._v("创建对象范式，"),s("code",[a._v("外部类对象实例.new 内部类 ()")])])]),a._v(" "),s("h3",{attrs:{id:"_2-静态内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-静态内部类"}},[a._v("#")]),a._v(" 2. 静态内部类")]),a._v(" "),s("p",[a._v("定义：位于外部类成员位置而且用 static 修饰的类")]),a._v(" "),s("p",[a._v("大白话的理解：像定义类的静态成员那样定义了一个类")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticOuter")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticInner")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" ages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticOuter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("StaticInner")]),a._v(" oi "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticOuter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("StaticInner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("特点：")]),a._v(" "),s("ul",[s("li",[a._v("可以访问外部类的「所有静态成员」，包括 private 修饰的")]),a._v(" "),s("li",[a._v("创建对象范式，"),s("code",[a._v("new 外部类.内部类 ()")])])]),a._v(" "),s("h3",{attrs:{id:"_3-局部内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-局部内部类"}},[a._v("#")]),a._v(" 3. 局部内部类")]),a._v(" "),s("p",[a._v("定义：定义在一个方法或者一个作用域里面的类")]),a._v(" "),s("p",[a._v("大白话的理解：像变量一样声明一个类，只能在声明的作用域里使用")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalOuter")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalInner")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalInner")]),a._v(" oi "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalInner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalInner")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalInner")]),a._v(" oi "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalInner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("特点：")]),a._v(" "),s("ul",[s("li",[a._v("可以访问外部类的「所有成员」，包括 private 修饰的")]),a._v(" "),s("li",[a._v("创建对象范式，在对应作用域中 "),s("code",[a._v("new 内部类 ()")])])]),a._v(" "),s("h3",{attrs:{id:"_4-匿名内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-匿名内部类"}},[a._v("#")]),a._v(" 4. 匿名内部类")]),a._v(" "),s("p",[a._v("定义：没有名字的类")]),a._v(" "),s("p",[a._v("大白话的理解：没有起名字的类")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("特点：")]),a._v(" "),s("ul",[s("li",[a._v("可以访问外部类的「所有成员」，包括 private 修饰的")]),a._v(" "),s("li",[a._v("创建对象范式，在对应作用域中 "),s("code",[a._v("new 类 (){}")])])]),a._v(" "),s("h2",{attrs:{id:"三、应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、应用场景"}},[a._v("#")]),a._v(" 三、应用场景")]),a._v(" "),s("p",[s("strong",[a._v("1. 私有性封装")])]),a._v(" "),s("p",[a._v("外部类只能被 public/默认 2 个词修饰，如果想私有（private）只能设计为成员内部类。")]),a._v(" "),s("p",[a._v("如果某个类只想在某个方法里面使用，可以使用局部内部类。")]),a._v(" "),s("p",[a._v("比如： Iterator 接口的大多数实现类。")]),a._v(" "),s("p",[s("strong",[a._v("2. 组合")])]),a._v(" "),s("p",[a._v("一个抽象类 S 实现一些模板方法，其他功能类可以组合若干个内部类（抽象类 S 的实现类）提供功能，对外来说，内部实现细节被屏蔽了。")]),a._v(" "),s("p",[a._v("比如： 锁与 AQS 的关系。")]),a._v(" "),s("p",[s("strong",[a._v("3. 减少类定义")])]),a._v(" "),s("p",[a._v("对于需要继承或者实现的类，我们可以直接使用匿名内部类，不需要在声明 class。")]),a._v(" "),s("blockquote",[s("p",[a._v("限于篇幅，部分内部类变量访问代码参考源码 "),s("a",{attrs:{href:"https://github.com/GourdErwa/java-advanced/tree/master/java-core/src/main/java/io/gourd/java/core/inner_class",target:"_blank",rel:"noopener noreferrer"}},[a._v("inner_class"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);